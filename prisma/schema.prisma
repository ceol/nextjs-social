generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Account {
  id                 String  @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?
  access_token       String?
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?
  session_state      String?
  oauth_token_secret String?
  oauth_token        String?
  user               User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  userName      String?   @unique
  accounts      Account[]
  reposts       Post[]    @relation("RepostedPosts")
  likes         Post[]    @relation("LikedPosts")
  posts         Post[]
  sessions      Session[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Post {
  id         String   @id @default(cuid())
  content    String
  datePosted DateTime @default(now())
  replyCount Int      @default(0)

  repostCount Int    @default(0)
  repostedBy  User[] @relation("RepostedPosts")

  likeCount Int    @default(0)
  likedBy   User[] @relation("LikedPosts")

  authorId String
  author   User   @relation(fields: [authorId], references: [id], onDelete: Cascade)
}
